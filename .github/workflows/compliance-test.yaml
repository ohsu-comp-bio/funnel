# Workflow for running the TES compliance suite against Funnel
#
# This includes the following steps:
#  1. Build Funnel and store the resulting binary artifact
#  2. Install tes-compliance-suite and run against every version of TES simultaneously
#  3. start-report-deployment: Send a dispatch to the funnel-compliance repository to generate and publish
#     the tes-compliance-suite report to https://ohsu-comp-bio.github.io/funnel-compliance/
#
# Optionally debug via SSH
# Ref: https://fleetdm.com/engineering/tips-for-github-actions-usability
#
# To use this step uncomment and place anywhere in the build steps. The build will pause on this step and
# output a ssh address associated with the Github action worker. Helpful for debugging build steps and
# and intermediary files/artifacts.
#
# - name: "Debug: Package dependancies for tmate (CentOS)"
#   run: |
#     yum install -y xz
#     ln -s /bin/true /bin/apt-get
#
# - name: Setup tmate session
#   uses: mxschmitt/action-tmate@v3

name: Compliance Test

on:
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v5
      with:
        go-version: 1.21

    - name: Check out code
      uses: actions/checkout@v2

    - name: Build
      run: make build

    - name: Store funnel
      uses: actions/upload-artifact@v2
      with:
        name: funnelBin
        path: funnel

  compliance:
    strategy:
      fail-fast: false
      matrix:
        version: [1.0.0, 1.1.0]
        db: ["boltdb", "mongodb"]
        compute: ["local"]
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Required to access the 'tests/mongo.config.yml' file
      # Perhaps uploading it as an artifact would be more efficient?
      - name: Check out code
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v3
        with:
          name: funnelBin

      - name: Start Funnel server
        run: |
          touch config.yml
          if [ ${{ matrix.db }} = "mongodb" ]; then
            make start-mongodb
            cat `pwd`/tests/mongo.config.yml >> config.yml
          fi
          chmod +x funnel
          ./funnel server run --config `pwd`/config.yml &> funnel.logs &

      - name: Run OpenAPI Test Runner
        run: |
          git clone https://github.com/elixir-cloud-aai/openapi-test-runner
          cd openapi-test-runner
          python3 -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt
          python setup.py install  
          openapi-test-runner report --version "${{ matrix.version }}" --server "http://localhost:8000/"

