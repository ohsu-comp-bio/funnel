// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: compute/scheduler/scheduler.proto

package scheduler

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NodeState int32

const (
	NodeState_UNINITIALIZED NodeState = 0
	NodeState_ALIVE         NodeState = 1
	NodeState_DEAD          NodeState = 2
	NodeState_GONE          NodeState = 3
	NodeState_INITIALIZING  NodeState = 4
	NodeState_DRAIN         NodeState = 5
)

// Enum value maps for NodeState.
var (
	NodeState_name = map[int32]string{
		0: "UNINITIALIZED",
		1: "ALIVE",
		2: "DEAD",
		3: "GONE",
		4: "INITIALIZING",
		5: "DRAIN",
	}
	NodeState_value = map[string]int32{
		"UNINITIALIZED": 0,
		"ALIVE":         1,
		"DEAD":          2,
		"GONE":          3,
		"INITIALIZING":  4,
		"DRAIN":         5,
	}
)

func (x NodeState) Enum() *NodeState {
	p := new(NodeState)
	*p = x
	return p
}

func (x NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_compute_scheduler_scheduler_proto_enumTypes[0].Descriptor()
}

func (NodeState) Type() protoreflect.EnumType {
	return &file_compute_scheduler_scheduler_proto_enumTypes[0]
}

func (x NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeState.Descriptor instead.
func (NodeState) EnumDescriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{0}
}

type Resources struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	Cpus  uint32                 `protobuf:"varint,1,opt,name=cpus,proto3" json:"cpus,omitempty"`
	// In GB
	RamGb float64 `protobuf:"fixed64,2,opt,name=ram_gb,json=ramGb,proto3" json:"ram_gb,omitempty"`
	// In GB
	DiskGb        float64 `protobuf:"fixed64,3,opt,name=disk_gb,json=diskGb,proto3" json:"disk_gb,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resources) Reset() {
	*x = Resources{}
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resources) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resources) ProtoMessage() {}

func (x *Resources) ProtoReflect() protoreflect.Message {
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resources.ProtoReflect.Descriptor instead.
func (*Resources) Descriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{0}
}

func (x *Resources) GetCpus() uint32 {
	if x != nil {
		return x.Cpus
	}
	return 0
}

func (x *Resources) GetRamGb() float64 {
	if x != nil {
		return x.RamGb
	}
	return 0
}

func (x *Resources) GetDiskGb() float64 {
	if x != nil {
		return x.DiskGb
	}
	return 0
}

type Node struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Resources   *Resources             `protobuf:"bytes,5,opt,name=resources,proto3" json:"resources,omitempty"`
	Available   *Resources             `protobuf:"bytes,6,opt,name=available,proto3" json:"available,omitempty"`
	State       NodeState              `protobuf:"varint,8,opt,name=state,proto3,enum=scheduler.NodeState" json:"state,omitempty"`
	Preemptible bool                   `protobuf:"varint,9,opt,name=preemptible,proto3" json:"preemptible,omitempty"`
	Zone        string                 `protobuf:"bytes,11,opt,name=zone,proto3" json:"zone,omitempty"`
	Hostname    string                 `protobuf:"bytes,13,opt,name=hostname,proto3" json:"hostname,omitempty"`
	// Timestamp version of the record in the database. Used to prevent write conflicts and as the last ping time.
	Version       int64             `protobuf:"varint,14,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      map[string]string `protobuf:"bytes,15,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	TaskIds       []string          `protobuf:"bytes,16,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`
	LastPing      int64             `protobuf:"varint,17,opt,name=last_ping,json=lastPing,proto3" json:"last_ping,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{1}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetResources() *Resources {
	if x != nil {
		return x.Resources
	}
	return nil
}

func (x *Node) GetAvailable() *Resources {
	if x != nil {
		return x.Available
	}
	return nil
}

func (x *Node) GetState() NodeState {
	if x != nil {
		return x.State
	}
	return NodeState_UNINITIALIZED
}

func (x *Node) GetPreemptible() bool {
	if x != nil {
		return x.Preemptible
	}
	return false
}

func (x *Node) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *Node) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *Node) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Node) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Node) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

func (x *Node) GetLastPing() int64 {
	if x != nil {
		return x.LastPing
	}
	return 0
}

type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{2}
}

func (x *GetNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ListNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{3}
}

type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{4}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type PutNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PutNodeResponse) Reset() {
	*x = PutNodeResponse{}
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PutNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutNodeResponse) ProtoMessage() {}

func (x *PutNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutNodeResponse.ProtoReflect.Descriptor instead.
func (*PutNodeResponse) Descriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{5}
}

type DeleteNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNodeResponse) Reset() {
	*x = DeleteNodeResponse{}
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeResponse) ProtoMessage() {}

func (x *DeleteNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_compute_scheduler_scheduler_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeResponse.ProtoReflect.Descriptor instead.
func (*DeleteNodeResponse) Descriptor() ([]byte, []int) {
	return file_compute_scheduler_scheduler_proto_rawDescGZIP(), []int{6}
}

var File_compute_scheduler_scheduler_proto protoreflect.FileDescriptor

const file_compute_scheduler_scheduler_proto_rawDesc = "" +
	"\n" +
	"!compute/scheduler/scheduler.proto\x12\tscheduler\x1a\x1cgoogle/api/annotations.proto\"O\n" +
	"\tResources\x12\x12\n" +
	"\x04cpus\x18\x01 \x01(\rR\x04cpus\x12\x15\n" +
	"\x06ram_gb\x18\x02 \x01(\x01R\x05ramGb\x12\x17\n" +
	"\adisk_gb\x18\x03 \x01(\x01R\x06diskGb\"\xc6\x03\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x122\n" +
	"\tresources\x18\x05 \x01(\v2\x14.scheduler.ResourcesR\tresources\x122\n" +
	"\tavailable\x18\x06 \x01(\v2\x14.scheduler.ResourcesR\tavailable\x12*\n" +
	"\x05state\x18\b \x01(\x0e2\x14.scheduler.NodeStateR\x05state\x12 \n" +
	"\vpreemptible\x18\t \x01(\bR\vpreemptible\x12\x12\n" +
	"\x04zone\x18\v \x01(\tR\x04zone\x12\x1a\n" +
	"\bhostname\x18\r \x01(\tR\bhostname\x12\x18\n" +
	"\aversion\x18\x0e \x01(\x03R\aversion\x129\n" +
	"\bmetadata\x18\x0f \x03(\v2\x1d.scheduler.Node.MetadataEntryR\bmetadata\x12\x19\n" +
	"\btask_ids\x18\x10 \x03(\tR\ataskIds\x12\x1b\n" +
	"\tlast_ping\x18\x11 \x01(\x03R\blastPing\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\" \n" +
	"\x0eGetNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x12\n" +
	"\x10ListNodesRequest\":\n" +
	"\x11ListNodesResponse\x12%\n" +
	"\x05nodes\x18\x01 \x03(\v2\x0f.scheduler.NodeR\x05nodes\"\x11\n" +
	"\x0fPutNodeResponse\"\x14\n" +
	"\x12DeleteNodeResponse*Z\n" +
	"\tNodeState\x12\x11\n" +
	"\rUNINITIALIZED\x10\x00\x12\t\n" +
	"\x05ALIVE\x10\x01\x12\b\n" +
	"\x04DEAD\x10\x02\x12\b\n" +
	"\x04GONE\x10\x03\x12\x10\n" +
	"\fINITIALIZING\x10\x04\x12\t\n" +
	"\x05DRAIN\x10\x052\xb6\x02\n" +
	"\x10SchedulerService\x128\n" +
	"\aPutNode\x12\x0f.scheduler.Node\x1a\x1a.scheduler.PutNodeResponse\"\x00\x12>\n" +
	"\n" +
	"DeleteNode\x12\x0f.scheduler.Node\x1a\x1d.scheduler.DeleteNodeResponse\"\x00\x12Y\n" +
	"\tListNodes\x12\x1b.scheduler.ListNodesRequest\x1a\x1c.scheduler.ListNodesResponse\"\x11\x82\xd3\xe4\x93\x02\v\x12\t/v1/nodes\x12M\n" +
	"\aGetNode\x12\x19.scheduler.GetNodeRequest\x1a\x0f.scheduler.Node\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/nodes/{id}B3Z1github.com/ohsu-comp-bio/funnel/compute/schedulerb\x06proto3"

var (
	file_compute_scheduler_scheduler_proto_rawDescOnce sync.Once
	file_compute_scheduler_scheduler_proto_rawDescData []byte
)

func file_compute_scheduler_scheduler_proto_rawDescGZIP() []byte {
	file_compute_scheduler_scheduler_proto_rawDescOnce.Do(func() {
		file_compute_scheduler_scheduler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_compute_scheduler_scheduler_proto_rawDesc), len(file_compute_scheduler_scheduler_proto_rawDesc)))
	})
	return file_compute_scheduler_scheduler_proto_rawDescData
}

var file_compute_scheduler_scheduler_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_compute_scheduler_scheduler_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_compute_scheduler_scheduler_proto_goTypes = []any{
	(NodeState)(0),             // 0: scheduler.NodeState
	(*Resources)(nil),          // 1: scheduler.Resources
	(*Node)(nil),               // 2: scheduler.Node
	(*GetNodeRequest)(nil),     // 3: scheduler.GetNodeRequest
	(*ListNodesRequest)(nil),   // 4: scheduler.ListNodesRequest
	(*ListNodesResponse)(nil),  // 5: scheduler.ListNodesResponse
	(*PutNodeResponse)(nil),    // 6: scheduler.PutNodeResponse
	(*DeleteNodeResponse)(nil), // 7: scheduler.DeleteNodeResponse
	nil,                        // 8: scheduler.Node.MetadataEntry
}
var file_compute_scheduler_scheduler_proto_depIdxs = []int32{
	1, // 0: scheduler.Node.resources:type_name -> scheduler.Resources
	1, // 1: scheduler.Node.available:type_name -> scheduler.Resources
	0, // 2: scheduler.Node.state:type_name -> scheduler.NodeState
	8, // 3: scheduler.Node.metadata:type_name -> scheduler.Node.MetadataEntry
	2, // 4: scheduler.ListNodesResponse.nodes:type_name -> scheduler.Node
	2, // 5: scheduler.SchedulerService.PutNode:input_type -> scheduler.Node
	2, // 6: scheduler.SchedulerService.DeleteNode:input_type -> scheduler.Node
	4, // 7: scheduler.SchedulerService.ListNodes:input_type -> scheduler.ListNodesRequest
	3, // 8: scheduler.SchedulerService.GetNode:input_type -> scheduler.GetNodeRequest
	6, // 9: scheduler.SchedulerService.PutNode:output_type -> scheduler.PutNodeResponse
	7, // 10: scheduler.SchedulerService.DeleteNode:output_type -> scheduler.DeleteNodeResponse
	5, // 11: scheduler.SchedulerService.ListNodes:output_type -> scheduler.ListNodesResponse
	2, // 12: scheduler.SchedulerService.GetNode:output_type -> scheduler.Node
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_compute_scheduler_scheduler_proto_init() }
func file_compute_scheduler_scheduler_proto_init() {
	if File_compute_scheduler_scheduler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_compute_scheduler_scheduler_proto_rawDesc), len(file_compute_scheduler_scheduler_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_compute_scheduler_scheduler_proto_goTypes,
		DependencyIndexes: file_compute_scheduler_scheduler_proto_depIdxs,
		EnumInfos:         file_compute_scheduler_scheduler_proto_enumTypes,
		MessageInfos:      file_compute_scheduler_scheduler_proto_msgTypes,
	}.Build()
	File_compute_scheduler_scheduler_proto = out.File
	file_compute_scheduler_scheduler_proto_goTypes = nil
	file_compute_scheduler_scheduler_proto_depIdxs = nil
}
