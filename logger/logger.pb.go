// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: logger/logger.proto

package logger

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JSONFormatConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DisableTimestamp bool                   `protobuf:"varint,1,opt,name=disable_timestamp,json=disableTimestamp,proto3" json:"disable_timestamp,omitempty"`
	TimestampFormat  string                 `protobuf:"bytes,2,opt,name=timestamp_format,json=timestampFormat,proto3" json:"timestamp_format,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *JSONFormatConfig) Reset() {
	*x = JSONFormatConfig{}
	mi := &file_logger_logger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JSONFormatConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JSONFormatConfig) ProtoMessage() {}

func (x *JSONFormatConfig) ProtoReflect() protoreflect.Message {
	mi := &file_logger_logger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JSONFormatConfig.ProtoReflect.Descriptor instead.
func (*JSONFormatConfig) Descriptor() ([]byte, []int) {
	return file_logger_logger_proto_rawDescGZIP(), []int{0}
}

func (x *JSONFormatConfig) GetDisableTimestamp() bool {
	if x != nil {
		return x.DisableTimestamp
	}
	return false
}

func (x *JSONFormatConfig) GetTimestampFormat() string {
	if x != nil {
		return x.TimestampFormat
	}
	return ""
}

type TextFormatConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ForceColors      bool                   `protobuf:"varint,1,opt,name=force_colors,json=forceColors,proto3" json:"force_colors,omitempty"`
	DisableColors    bool                   `protobuf:"varint,2,opt,name=disable_colors,json=disableColors,proto3" json:"disable_colors,omitempty"`
	DisableTimestamp bool                   `protobuf:"varint,3,opt,name=disable_timestamp,json=disableTimestamp,proto3" json:"disable_timestamp,omitempty"`
	FullTimestamp    bool                   `protobuf:"varint,4,opt,name=full_timestamp,json=fullTimestamp,proto3" json:"full_timestamp,omitempty"`
	TimestampFormat  string                 `protobuf:"bytes,5,opt,name=timestamp_format,json=timestampFormat,proto3" json:"timestamp_format,omitempty"`
	DisableSorting   bool                   `protobuf:"varint,6,opt,name=disable_sorting,json=disableSorting,proto3" json:"disable_sorting,omitempty"`
	Indent           string                 `protobuf:"bytes,7,opt,name=indent,proto3" json:"indent,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TextFormatConfig) Reset() {
	*x = TextFormatConfig{}
	mi := &file_logger_logger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextFormatConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextFormatConfig) ProtoMessage() {}

func (x *TextFormatConfig) ProtoReflect() protoreflect.Message {
	mi := &file_logger_logger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextFormatConfig.ProtoReflect.Descriptor instead.
func (*TextFormatConfig) Descriptor() ([]byte, []int) {
	return file_logger_logger_proto_rawDescGZIP(), []int{1}
}

func (x *TextFormatConfig) GetForceColors() bool {
	if x != nil {
		return x.ForceColors
	}
	return false
}

func (x *TextFormatConfig) GetDisableColors() bool {
	if x != nil {
		return x.DisableColors
	}
	return false
}

func (x *TextFormatConfig) GetDisableTimestamp() bool {
	if x != nil {
		return x.DisableTimestamp
	}
	return false
}

func (x *TextFormatConfig) GetFullTimestamp() bool {
	if x != nil {
		return x.FullTimestamp
	}
	return false
}

func (x *TextFormatConfig) GetTimestampFormat() string {
	if x != nil {
		return x.TimestampFormat
	}
	return ""
}

func (x *TextFormatConfig) GetDisableSorting() bool {
	if x != nil {
		return x.DisableSorting
	}
	return false
}

func (x *TextFormatConfig) GetIndent() string {
	if x != nil {
		return x.Indent
	}
	return ""
}

type LoggerConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Level         string                 `protobuf:"bytes,1,opt,name=level,proto3" json:"level,omitempty"`
	Formatter     string                 `protobuf:"bytes,2,opt,name=formatter,proto3" json:"formatter,omitempty"`
	OutputFile    string                 `protobuf:"bytes,3,opt,name=output_file,json=outputFile,proto3" json:"output_file,omitempty"`
	JsonFormat    *JSONFormatConfig      `protobuf:"bytes,4,opt,name=json_format,json=jsonFormat,proto3" json:"json_format,omitempty"`
	TextFormat    *TextFormatConfig      `protobuf:"bytes,5,opt,name=text_format,json=textFormat,proto3" json:"text_format,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoggerConfig) Reset() {
	*x = LoggerConfig{}
	mi := &file_logger_logger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoggerConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggerConfig) ProtoMessage() {}

func (x *LoggerConfig) ProtoReflect() protoreflect.Message {
	mi := &file_logger_logger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggerConfig.ProtoReflect.Descriptor instead.
func (*LoggerConfig) Descriptor() ([]byte, []int) {
	return file_logger_logger_proto_rawDescGZIP(), []int{2}
}

func (x *LoggerConfig) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LoggerConfig) GetFormatter() string {
	if x != nil {
		return x.Formatter
	}
	return ""
}

func (x *LoggerConfig) GetOutputFile() string {
	if x != nil {
		return x.OutputFile
	}
	return ""
}

func (x *LoggerConfig) GetJsonFormat() *JSONFormatConfig {
	if x != nil {
		return x.JsonFormat
	}
	return nil
}

func (x *LoggerConfig) GetTextFormat() *TextFormatConfig {
	if x != nil {
		return x.TextFormat
	}
	return nil
}

var File_logger_logger_proto protoreflect.FileDescriptor

const file_logger_logger_proto_rawDesc = "" +
	"\n" +
	"\x13logger/logger.proto\x12\x06logger\"j\n" +
	"\x10JSONFormatConfig\x12+\n" +
	"\x11disable_timestamp\x18\x01 \x01(\bR\x10disableTimestamp\x12)\n" +
	"\x10timestamp_format\x18\x02 \x01(\tR\x0ftimestampFormat\"\x9c\x02\n" +
	"\x10TextFormatConfig\x12!\n" +
	"\fforce_colors\x18\x01 \x01(\bR\vforceColors\x12%\n" +
	"\x0edisable_colors\x18\x02 \x01(\bR\rdisableColors\x12+\n" +
	"\x11disable_timestamp\x18\x03 \x01(\bR\x10disableTimestamp\x12%\n" +
	"\x0efull_timestamp\x18\x04 \x01(\bR\rfullTimestamp\x12)\n" +
	"\x10timestamp_format\x18\x05 \x01(\tR\x0ftimestampFormat\x12'\n" +
	"\x0fdisable_sorting\x18\x06 \x01(\bR\x0edisableSorting\x12\x16\n" +
	"\x06indent\x18\a \x01(\tR\x06indent\"\xd9\x01\n" +
	"\fLoggerConfig\x12\x14\n" +
	"\x05level\x18\x01 \x01(\tR\x05level\x12\x1c\n" +
	"\tformatter\x18\x02 \x01(\tR\tformatter\x12\x1f\n" +
	"\voutput_file\x18\x03 \x01(\tR\n" +
	"outputFile\x129\n" +
	"\vjson_format\x18\x04 \x01(\v2\x18.logger.JSONFormatConfigR\n" +
	"jsonFormat\x129\n" +
	"\vtext_format\x18\x05 \x01(\v2\x18.logger.TextFormatConfigR\n" +
	"textFormatB(Z&github.com/ohsu-comp-bio/funnel/loggerb\x06proto3"

var (
	file_logger_logger_proto_rawDescOnce sync.Once
	file_logger_logger_proto_rawDescData []byte
)

func file_logger_logger_proto_rawDescGZIP() []byte {
	file_logger_logger_proto_rawDescOnce.Do(func() {
		file_logger_logger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_logger_logger_proto_rawDesc), len(file_logger_logger_proto_rawDesc)))
	})
	return file_logger_logger_proto_rawDescData
}

var file_logger_logger_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_logger_logger_proto_goTypes = []any{
	(*JSONFormatConfig)(nil), // 0: logger.JSONFormatConfig
	(*TextFormatConfig)(nil), // 1: logger.TextFormatConfig
	(*LoggerConfig)(nil),     // 2: logger.LoggerConfig
}
var file_logger_logger_proto_depIdxs = []int32{
	0, // 0: logger.LoggerConfig.json_format:type_name -> logger.JSONFormatConfig
	1, // 1: logger.LoggerConfig.text_format:type_name -> logger.TextFormatConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_logger_logger_proto_init() }
func file_logger_logger_proto_init() {
	if File_logger_logger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_logger_logger_proto_rawDesc), len(file_logger_logger_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_logger_logger_proto_goTypes,
		DependencyIndexes: file_logger_logger_proto_depIdxs,
		MessageInfos:      file_logger_logger_proto_msgTypes,
	}.Build()
	File_logger_logger_proto = out.File
	file_logger_logger_proto_goTypes = nil
	file_logger_logger_proto_depIdxs = nil
}
