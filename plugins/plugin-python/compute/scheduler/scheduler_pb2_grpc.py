# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from compute.scheduler import scheduler_pb2 as compute_dot_scheduler_dot_scheduler__pb2


class SchedulerServiceStub(object):
    """*
    Scheduler Service
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PutNode = channel.unary_unary(
                '/scheduler.SchedulerService/PutNode',
                request_serializer=compute_dot_scheduler_dot_scheduler__pb2.Node.SerializeToString,
                response_deserializer=compute_dot_scheduler_dot_scheduler__pb2.PutNodeResponse.FromString,
                )
        self.DeleteNode = channel.unary_unary(
                '/scheduler.SchedulerService/DeleteNode',
                request_serializer=compute_dot_scheduler_dot_scheduler__pb2.Node.SerializeToString,
                response_deserializer=compute_dot_scheduler_dot_scheduler__pb2.DeleteNodeResponse.FromString,
                )
        self.ListNodes = channel.unary_unary(
                '/scheduler.SchedulerService/ListNodes',
                request_serializer=compute_dot_scheduler_dot_scheduler__pb2.ListNodesRequest.SerializeToString,
                response_deserializer=compute_dot_scheduler_dot_scheduler__pb2.ListNodesResponse.FromString,
                )
        self.GetNode = channel.unary_unary(
                '/scheduler.SchedulerService/GetNode',
                request_serializer=compute_dot_scheduler_dot_scheduler__pb2.GetNodeRequest.SerializeToString,
                response_deserializer=compute_dot_scheduler_dot_scheduler__pb2.Node.FromString,
                )


class SchedulerServiceServicer(object):
    """*
    Scheduler Service
    """

    def PutNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SchedulerServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PutNode': grpc.unary_unary_rpc_method_handler(
                    servicer.PutNode,
                    request_deserializer=compute_dot_scheduler_dot_scheduler__pb2.Node.FromString,
                    response_serializer=compute_dot_scheduler_dot_scheduler__pb2.PutNodeResponse.SerializeToString,
            ),
            'DeleteNode': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteNode,
                    request_deserializer=compute_dot_scheduler_dot_scheduler__pb2.Node.FromString,
                    response_serializer=compute_dot_scheduler_dot_scheduler__pb2.DeleteNodeResponse.SerializeToString,
            ),
            'ListNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.ListNodes,
                    request_deserializer=compute_dot_scheduler_dot_scheduler__pb2.ListNodesRequest.FromString,
                    response_serializer=compute_dot_scheduler_dot_scheduler__pb2.ListNodesResponse.SerializeToString,
            ),
            'GetNode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNode,
                    request_deserializer=compute_dot_scheduler_dot_scheduler__pb2.GetNodeRequest.FromString,
                    response_serializer=compute_dot_scheduler_dot_scheduler__pb2.Node.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'scheduler.SchedulerService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SchedulerService(object):
    """*
    Scheduler Service
    """

    @staticmethod
    def PutNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.SchedulerService/PutNode',
            compute_dot_scheduler_dot_scheduler__pb2.Node.SerializeToString,
            compute_dot_scheduler_dot_scheduler__pb2.PutNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.SchedulerService/DeleteNode',
            compute_dot_scheduler_dot_scheduler__pb2.Node.SerializeToString,
            compute_dot_scheduler_dot_scheduler__pb2.DeleteNodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.SchedulerService/ListNodes',
            compute_dot_scheduler_dot_scheduler__pb2.ListNodesRequest.SerializeToString,
            compute_dot_scheduler_dot_scheduler__pb2.ListNodesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scheduler.SchedulerService/GetNode',
            compute_dot_scheduler_dot_scheduler__pb2.GetNodeRequest.SerializeToString,
            compute_dot_scheduler_dot_scheduler__pb2.Node.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
