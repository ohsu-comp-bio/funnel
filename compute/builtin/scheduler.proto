syntax = "proto3";

package scheduler;
option go_package = "builtin";

import "tes/tes.proto";
import "google/api/annotations.proto";

message Resources {
  uint32 cpus = 1;
  // In GB
  double ram_gb = 2;
  // In GB
  double disk_gb = 3;
}

enum NodeState {
  ALIVE = 1;
  DEAD = 2;
  GONE = 3;
  DRAIN = 5;
}

message Node {
  string id = 1;
  Resources resources = 5;
  Resources available = 6;
  NodeState state = 8;
  bool preemptible = 9;
  string zone = 11;
  string hostname  = 13;
  map<string,string> metadata = 15;
  repeated string task_ids = 16;
  int64 last_ping = 17;
}

message GetNodeRequest {
  string id = 1;
}

message ListNodesRequest {}
message ListNodesResponse {
  repeated Node nodes = 1;
}

enum ControlType {
  UNKNOWN = 0;
  CREATE_TASK = 1;
  DRAIN_NODE = 2;
}

message Control {
  ControlType type = 1;
  tes.Task task = 2;
}

message DrainNodeRequest {
  string id = 1;
}
message DrainNodeResponse {}

/**
 * Scheduler Service
 */
service SchedulerService {
  rpc NodeChat(stream Node) returns (stream Control) {}

  rpc ListNodes(ListNodesRequest) returns (ListNodesResponse) {
    option (google.api.http) = {
      get: "/v1/nodes"
    };
  };

  rpc GetNode(GetNodeRequest) returns (Node) {
    option (google.api.http) = {
      get: "/v1/nodes/{id}"
    };
  };

  rpc DrainNode(DrainNodeRequest) returns (DrainNodeResponse) {
    option (google.api.http) = {
      post: "/v1/nodes/{id}:drain"
    };
  };
}
