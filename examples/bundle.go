// Code generated by go-bindata.
// sources:
// examples/google-storage.json
// examples/hello-world.json
// examples/input-content.json
// examples/log-streaming.json
// examples/md5sum.json
// examples/resource-request.json
// examples/s3.json
// DO NOT EDIT!

package examples

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplesGoogleStorageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4f\x4b\x03\x31\x14\xc4\xef\xfb\x29\x86\x9c\x14\x6a\x77\x3d\x54\xb0\x57\x05\x2f\x82\x62\xed\x49\x3c\xbc\x26\xd9\x35\x98\x7f\x6c\x5e\xb0\xb4\xf4\xbb\x4b\x52\xbb\x05\xf5\x12\x12\xde\xbc\x5f\x66\x66\xdf\x00\xc2\x93\xd3\x62\x09\xf1\x10\xc2\x60\x35\xee\x6c\xc8\x0a\x2b\x0e\x23\x0d\x1a\x7a\x4b\x2e\x5a\x2d\x66\x45\xa9\x74\x92\xa3\x89\x6c\x82\x2f\x0b\xaf\x94\x3e\x61\x7c\xcc\x9c\x40\x5e\x21\x64\xae\x77\x49\x1e\x1b\x8d\x7f\x79\xeb\x97\xc7\x34\x3f\xd2\xf4\x56\xcb\xcc\x61\x4c\x62\x89\xb7\x06\x00\xf6\xf5\x04\x84\x71\x34\x54\x4f\x79\x93\x3d\xe7\xaa\xaf\x03\x19\x9c\x23\xaf\xca\x86\x70\x6a\x91\xb2\x13\x33\x88\x96\x5d\x6c\x7b\x63\xf5\x7c\x67\xa2\x78\x9f\xd4\x89\x55\xc8\x5c\x38\x55\xf1\xf3\xac\xd3\x43\x03\x54\xa1\x38\x06\xf8\xeb\xe1\x54\xcb\xce\xc4\x82\x3e\x7b\xf8\xd5\xc2\x7d\xf8\xf2\x36\x90\x02\x21\xe6\x8d\x35\x12\x45\x8e\x7e\x0c\xee\x54\xc1\x29\xfc\xc5\x7a\x85\x67\x62\xed\x19\x4f\x7d\x6f\xa4\x86\x22\xa6\xcb\x33\x3a\x8f\xb6\x20\x87\xb4\x6c\xdb\x9c\x22\x87\xab\x48\x66\x6c\x29\x46\x6b\x24\x95\x1f\x53\xdb\x2d\x6e\xbb\xae\xbb\xbe\xa9\x59\xa7\xcd\x48\xfc\x31\x05\x9d\xaa\x38\x47\x6d\x0e\xcd\x77\x00\x00\x00\xff\xff\x48\xb6\xb8\x1e\xed\x01\x00\x00")

func examplesGoogleStorageJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesGoogleStorageJson,
		"examples/google-storage.json",
	)
}

func examplesGoogleStorageJson() (*asset, error) {
	bytes, err := examplesGoogleStorageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/google-storage.json", size: 493, mode: os.FileMode(420), modTime: time.Unix(1510422945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesHelloWorldJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\x41\x6a\xc4\x30\x0c\x45\xf7\x3e\xc5\x47\xeb\xd0\xec\xb3\xee\xa2\x77\x28\x59\xb8\xb6\x68\x4c\x6d\x2b\x58\x0a\x1d\x08\xb9\xfb\x60\xcf\x30\xcc\x46\x20\xde\xff\x4f\x3a\x1d\x40\xd5\x17\xa6\x05\xf4\xc5\x39\x0b\xfe\xa5\xe5\x48\x53\x07\x91\x35\xb4\xb4\x5b\x92\xda\xf9\x27\x17\xa9\x6a\xcd\x1b\x2b\x6c\x63\x14\x51\xc3\x8f\xd7\x14\xc0\x61\x13\x98\xd7\xbf\x8f\x47\x95\x6f\x1c\x0e\x93\xa6\xb4\xe0\xdb\x01\xc0\x39\x26\x40\xa9\xf8\xdf\x71\xcf\xe7\x3d\x55\x1e\xf9\x01\x82\x94\xe2\x6b\xec\x0d\xea\x3e\x9a\x40\xdb\xdb\x4f\xeb\x2b\xa9\x16\xe5\xb0\xee\x98\xad\xec\xf3\x73\x1d\xf4\x72\xc0\xea\x2e\x77\x0f\x00\x00\xff\xff\x3d\x37\xb7\x3f\xda\x00\x00\x00")

func examplesHelloWorldJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesHelloWorldJson,
		"examples/hello-world.json",
	)
}

func examplesHelloWorldJson() (*asset, error) {
	bytes, err := examplesHelloWorldJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/hello-world.json", size: 218, mode: os.FileMode(420), modTime: time.Unix(1510422945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesInputContentJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x51\x3f\x4f\xeb\x30\x10\xdf\xf3\x29\x7e\xca\xd2\xa5\x6a\xa6\xb7\x74\x7e\xef\x89\x4a\x6c\x0c\x0c\x50\x21\x13\x5f\x5a\x4b\xb6\x2f\xb2\x2f\x82\xaa\xea\x77\x47\xbe\x04\x52\xaa\xaa\xb0\x64\xf0\xfd\xfe\xe7\x58\x01\x75\x34\x81\xea\x35\xea\x4d\xec\x07\x41\xe7\x3c\xa1\xe5\x28\x14\x05\x26\x5a\xf0\x20\x9f\xef\xf5\xb2\xe0\x2d\xe5\x36\xb9\x5e\x1c\xc7\x42\xfb\x4b\x81\x63\x96\x64\x84\x32\x86\xec\xe2\x0e\xb2\x27\x2c\x26\x8d\x05\x3a\x47\xde\xa2\xe3\x04\x57\x1c\x32\x84\xd1\x26\x32\x42\x30\xa3\x1d\x47\xa5\xec\x39\x0b\xf2\x21\x0b\x85\xd1\x69\xc4\xd7\x6b\x3c\x55\x00\x70\xd4\xef\x59\xe2\xd6\xc8\xa8\xa9\x70\x3d\x5d\x84\x1b\x3b\x09\x23\xd8\x3f\x79\x08\x2b\x34\x12\xfa\xc6\x45\xbc\x39\xef\xf1\x4a\x53\x10\x7b\x25\xc2\x6a\x16\x95\x43\xaf\x7e\xff\x37\xf7\xff\xe6\xd7\xde\xc8\xbe\xbc\x4e\x92\xf3\x61\x6a\x5e\x6e\x77\xe4\x3d\xe3\x91\x93\xb7\xcf\xb1\x56\xc0\xa9\x02\xb6\x5a\x6f\x5c\xf6\x87\x7e\x59\x2c\xdf\x28\xf8\xa0\x67\x70\x07\x1d\x23\xa3\x35\xbd\x0c\x89\x74\x65\x4d\x26\x94\xe5\x45\x31\xb7\x2a\x0e\xc9\x17\xb9\xf2\x3b\xd6\x4d\xa3\xc4\xd6\x28\xef\xdb\xbc\xbf\x58\xa2\xa4\xbd\x28\x4a\xef\xd4\x0e\xc2\xe9\x4a\x55\x17\xcc\x4e\x15\x8d\xef\x5d\xa4\xf3\x11\x43\x30\xd1\x16\x46\xd9\xa1\x5e\xce\x43\x6f\xbf\x40\xd3\x38\xd7\xad\xab\x53\xf5\x11\x00\x00\xff\xff\x9b\xe3\x40\x40\xe0\x02\x00\x00")

func examplesInputContentJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesInputContentJson,
		"examples/input-content.json",
	)
}

func examplesInputContentJson() (*asset, error) {
	bytes, err := examplesInputContentJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/input-content.json", size: 736, mode: os.FileMode(420), modTime: time.Unix(1510422945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesLogStreamingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\xbd\x6a\x03\x31\x10\x84\xfb\x7b\x8a\x41\xb5\xe3\x23\xad\xdd\x86\x54\x29\xd2\x07\x17\xf2\x69\xb8\x13\xe8\xe7\xd8\xdd\x4b\x62\x8c\xdf\x3d\x48\x36\xc1\xcd\xc2\xe8\x1b\x0d\x33\xd7\x01\x70\xc5\x67\xba\x03\xdc\x47\x9d\xa1\x26\xf4\x39\x96\xd9\xed\x1a\x0a\xd4\x49\xe2\x6a\xb1\x96\xe6\x78\x63\xae\x45\x4d\xbc\x51\x61\x8b\x37\xa8\x85\xba\xd9\x48\x11\xa4\x3a\x2b\xbc\xf0\x91\xc1\x80\xf3\x05\x56\x61\x0b\xf1\xbe\x95\xc2\x84\xe0\x75\x39\x57\x2f\x41\xf7\xf8\x94\x58\x4c\x3b\x0d\xde\x38\x5a\xcc\x04\xbf\x29\x17\x28\xa7\x5a\xc2\x0e\x5b\xb1\x98\x30\xf9\x32\x31\x31\xec\xef\x95\xf8\xcb\x69\xb3\x2a\xea\x0e\xf8\x1a\x00\xe0\xda\x2f\xe0\x62\xf6\x73\x5f\xe2\xd3\x1a\x0b\xbb\xbf\x83\xa9\xe6\xec\x4b\x68\x3f\x9c\x2e\x6e\x07\xf7\x32\xb5\xfb\xb3\xc4\x44\x98\x6c\x3c\x22\xd4\xde\xe3\x08\x4d\xe4\x8a\xd7\xf6\x52\xe8\x4e\xff\x21\xf7\xa9\x2d\x7e\xb4\xbc\x8e\x0f\xf9\x8c\x29\xf2\x8c\x9b\xec\xf4\x36\x00\xa7\xe1\x36\xfc\x05\x00\x00\xff\xff\xaf\xf3\x97\x55\x6e\x01\x00\x00")

func examplesLogStreamingJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesLogStreamingJson,
		"examples/log-streaming.json",
	)
}

func examplesLogStreamingJson() (*asset, error) {
	bytes, err := examplesLogStreamingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/log-streaming.json", size: 366, mode: os.FileMode(420), modTime: time.Unix(1510422945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesMd5sumJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xbb\x6a\xc3\x40\x10\xec\xf5\x15\xc3\xd5\xc6\xaa\xd2\xb8\x4e\x02\x86\x74\x29\x83\x31\x87\xb4\xb6\x0f\x74\x0f\xb4\x7b\x60\x63\xfc\xef\xe1\xf6\x94\x28\x38\x22\x21\x69\x84\xb4\x3b\x33\x3b\x33\xe8\xda\x00\x26\x58\x4f\x66\x03\xb3\x0d\x29\x0b\x6c\xe8\x11\xb3\x94\xd7\x83\x1b\xc8\xac\x0a\xa4\x27\xee\x46\x97\xc4\xc5\x50\x90\x8f\xe4\x63\x60\x19\xad\x10\xc3\x2d\xd1\x18\x99\x5d\x38\xc2\x82\x9d\x4f\x03\xc1\xf7\x0f\x9c\x3d\xba\xe8\xbd\x0d\xfd\xba\xca\x2a\x95\xcd\x06\x6f\x0d\x00\x5c\xf5\xf9\xc5\xd1\x44\x52\x98\x32\x74\x7b\x67\xa6\xda\x96\x38\x9d\x58\xa3\x15\x9f\xda\xfa\xb1\xaf\xe6\x7c\x66\x01\x9d\x1d\x0b\x62\x80\x9c\x08\xa7\xc8\x02\xbe\xb0\x90\x5f\xcf\xca\x79\x1c\x8a\x62\x09\xb0\x69\xdb\x6f\x3a\x33\x50\x2e\x49\x0d\x3e\x6f\x5f\x9e\xe6\x69\xb2\x72\x2a\x53\x25\xba\x60\x74\x7e\x6b\x80\x9d\xa6\xad\xf5\xfc\x1e\x97\xa5\x8f\x3f\xe4\x7d\xd5\x35\xe2\xe1\xa3\x53\xc7\xe8\x6c\x92\x3c\x12\x97\x1a\xf4\xba\x10\xcb\x5e\x61\xff\xcb\x5b\xbd\xfe\x29\x70\xf1\x7c\x97\x98\xce\xd4\x65\x89\xe3\x42\x66\xe7\xed\x51\x15\xed\x90\x5c\xa0\x59\x73\xfa\x43\x0a\x63\x2a\xc4\xac\xe6\x4a\x77\x9f\xb8\xa9\xa5\xe5\xeb\xcd\xad\x79\x0f\x00\x00\xff\xff\x08\x83\x20\x7e\xdb\x02\x00\x00")

func examplesMd5sumJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesMd5sumJson,
		"examples/md5sum.json",
	)
}

func examplesMd5sumJson() (*asset, error) {
	bytes, err := examplesMd5sumJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/md5sum.json", size: 731, mode: os.FileMode(420), modTime: time.Unix(1510422945, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesResourceRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8f\x39\x6b\x03\x31\x10\x85\x7b\xfd\x8a\xc7\xd4\x22\xec\x82\xdd\x6c\x97\x03\x5c\x05\x82\x21\x55\x30\x61\xa2\x1d\x8c\xb0\x75\x44\xa3\x85\x40\xd8\xff\x6e\xa4\xb5\x4b\xbd\xe3\x7b\x9a\x7f\x03\x50\xe4\x20\x34\x81\x8e\xa2\x69\x29\x4e\x50\xe4\x77\x11\xad\x64\x9b\x3b\x8b\xba\xe2\x73\xf5\x29\xb6\xd0\x9b\x84\x14\xb5\x16\xae\xa2\x60\x54\xd6\xcb\x23\xef\xe3\x19\x3b\xbc\x7e\x7c\xc2\xa5\x22\x6a\x31\xee\x71\x78\xc1\xf1\xf9\xdd\x82\xe3\x8c\x71\x18\xda\x7b\xf6\x7a\x81\x66\x76\xf2\xb4\x2d\x94\xfb\xae\xd2\x84\xf6\x21\x80\x5c\x5e\xbe\x3b\x84\x26\xec\xec\xa6\x15\x0e\x87\x1f\x9a\x30\xee\xef\x42\x03\x6d\xca\x30\x18\x60\xed\x30\xf9\x13\xb7\xd4\x54\x5a\xf3\xab\xe7\x36\x24\x40\x3e\xf0\xb9\x1f\xca\xd7\xec\xa3\x90\x7d\x18\x2e\x85\xc0\x71\x6e\x0d\xd2\xab\x48\x26\x0b\x1a\xe9\xd4\xfd\xd5\x00\x27\xb3\x9a\x5b\x00\x00\x00\xff\xff\xc0\xca\xf1\x83\x2b\x01\x00\x00")

func examplesResourceRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesResourceRequestJson,
		"examples/resource-request.json",
	)
}

func examplesResourceRequestJson() (*asset, error) {
	bytes, err := examplesResourceRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/resource-request.json", size: 299, mode: os.FileMode(420), modTime: time.Unix(1510862518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesS3Json = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x4f\x4b\x2b\x31\x14\xc5\xf7\xf3\x29\x0e\x59\xbd\x07\x6d\x27\x7d\xf3\xba\x48\x77\xa2\x1b\xc1\x55\x47\x71\x21\x22\xb7\x93\xb4\x06\xf3\x67\xc8\x1f\x2c\x94\x7e\x77\x49\xaa\x53\xd1\x4d\x48\x38\xbf\x7b\x72\xce\x3d\x36\x00\x73\x64\x15\x5b\x83\xf5\x1d\xfa\xe4\x03\xed\x15\xd4\x81\xec\x68\x14\x9b\x15\x5d\xaa\x38\x04\x3d\x26\xed\x5d\xc1\xee\x29\xbe\x41\xbb\x31\xa7\x08\x72\x12\x3e\xa7\x7a\x1f\xc8\x61\xab\x70\x6d\x7c\x96\x93\xd1\xc3\xe6\x2e\x2e\xce\x36\xea\xa0\x86\x9c\x7c\x88\x6c\x8d\xa7\x06\x00\x8e\xf5\x04\x98\xb6\xb4\xaf\x11\xf2\x36\xbb\x94\x2b\x5f\x85\xc1\x5b\x4b\x4e\x96\x09\x66\xe5\x2a\x66\xcb\x66\x60\x6d\xb2\x63\xbb\xd3\x46\x2d\x0e\xd6\xb0\xe7\x89\x8e\x49\xfa\x9c\x8a\x4f\x25\x3e\x9f\x55\x3d\x35\x40\x05\xd9\x39\xf9\xef\x0c\x5f\x5b\xa8\xfa\x25\xc1\x8f\xf2\x37\xfe\xdd\x19\x4f\x12\x84\x31\x6f\x8d\x1e\x50\x72\x60\x17\xbc\xc5\xd5\x63\x8f\x6f\x3b\xfc\x73\xbb\xe9\xb1\xf3\xc1\x42\x08\x0e\x49\x89\xfe\x5e\x6c\x73\x30\xc5\x2e\x76\xeb\xb6\xd5\x21\xce\x0b\x37\x17\x82\xb7\xff\x38\x17\xdd\xb2\x13\xdd\x7f\xd1\x71\xce\x97\x2b\xfe\x72\xfe\xa8\x76\x9d\xe6\x47\x4a\xaf\x53\xd1\x69\x15\x97\xaa\xcd\xa9\xf9\x08\x00\x00\xff\xff\x62\xad\x87\xf9\xdc\x01\x00\x00")

func examplesS3JsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesS3Json,
		"examples/s3.json",
	)
}

func examplesS3Json() (*asset, error) {
	bytes, err := examplesS3JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/s3.json", size: 476, mode: os.FileMode(420), modTime: time.Unix(1510862518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"examples/google-storage.json":   examplesGoogleStorageJson,
	"examples/hello-world.json":      examplesHelloWorldJson,
	"examples/input-content.json":    examplesInputContentJson,
	"examples/log-streaming.json":    examplesLogStreamingJson,
	"examples/md5sum.json":           examplesMd5sumJson,
	"examples/resource-request.json": examplesResourceRequestJson,
	"examples/s3.json":               examplesS3Json,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"examples": {nil, map[string]*bintree{
		"google-storage.json":   {examplesGoogleStorageJson, map[string]*bintree{}},
		"hello-world.json":      {examplesHelloWorldJson, map[string]*bintree{}},
		"input-content.json":    {examplesInputContentJson, map[string]*bintree{}},
		"log-streaming.json":    {examplesLogStreamingJson, map[string]*bintree{}},
		"md5sum.json":           {examplesMd5sumJson, map[string]*bintree{}},
		"resource-request.json": {examplesResourceRequestJson, map[string]*bintree{}},
		"s3.json":               {examplesS3Json, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
