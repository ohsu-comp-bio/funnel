// Code generated by go-bindata.
// sources:
// examples/bundle.go
// examples/file-contents.json
// examples/google-storage.json
// examples/hello-world.json
// examples/log-streaming.json
// examples/md5sum.json
// examples/port-request.json
// examples/resource-request.json
// DO NOT EDIT!

package examples

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _examplesBundleGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func examplesBundleGoBytes() ([]byte, error) {
	return bindataRead(
		_examplesBundleGo,
		"examples/bundle.go",
	)
}

func examplesBundleGo() (*asset, error) {
	bytes, err := examplesBundleGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/bundle.go", size: 0, mode: os.FileMode(420), modTime: time.Unix(1498681020, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesFileContentsJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x41\x6f\xe2\x30\x10\x85\xef\xfc\x8a\xa7\x5c\xb8\x20\x72\xda\x0b\xe7\xdd\x55\x91\x7a\xeb\xa1\x87\x16\x21\x37\x9e\x80\x25\xdb\x13\xd9\x63\xb5\x08\xf1\xdf\x2b\x3b\x09\x55\x53\x0a\xe4\xe4\x68\xe6\xbd\x99\xf9\xde\x71\x06\x00\x95\x57\x8e\xaa\x15\xaa\xb5\xef\x92\xa0\x35\x96\xd0\xb0\x17\xf2\x12\xa1\xbc\x06\x27\x19\x0b\xd5\xa2\x97\x68\x8a\x4d\x30\x9d\x18\xf6\x59\xf9\x97\x1c\xfb\x28\x41\x09\x45\xa4\x68\xfc\x0e\xb2\x27\xcc\x47\x9b\x39\x5a\x43\x56\xa3\xe5\x00\x93\xa7\x44\x08\xa3\x09\xa4\x84\xa0\xfa\x91\xec\x8b\x66\xcf\x51\x10\x0f\x51\xc8\x8d\xc3\x7a\x45\xb5\xc2\x4b\xf9\xcf\xdf\xf1\xfc\xfa\x76\x41\xa3\xa4\xf7\x1f\xa4\xe7\x86\xc9\xbe\xfd\xa5\xc2\x70\xfa\x4f\x4c\x6e\x89\x5a\x5c\x57\x1b\x8f\x77\x63\x2d\xde\x68\x58\x4d\x5f\x58\x6a\x39\xb5\x96\x43\x57\x66\xff\x5f\x3f\xfe\x9b\xd6\x3a\x25\xfb\x5c\x1b\xec\xa7\xe5\x11\x4f\x6e\x79\x20\x6b\x19\xcf\x1c\xac\x7e\xf5\xd5\xb9\xef\x54\x5e\x9b\x81\x44\x9f\xc4\xdd\x28\xa2\x68\xbe\xc9\xe2\xa9\x34\x81\x5b\x14\x7a\x11\x8d\xea\x24\x05\x2a\x11\x95\xc5\x85\xa2\x6c\x4b\xcf\x6d\x1a\x29\xd8\x6c\x9a\x13\x5d\xd5\x75\x91\x37\xaa\xa8\x2f\xa4\x72\x37\xba\x7c\xc5\x2f\x48\xe8\x83\x9a\x24\x1c\xae\x42\x31\x4e\xed\x68\x3b\xa2\x51\xb6\x33\x9e\x7e\x84\xe1\x74\xb6\xc8\xe0\xaa\xc5\x57\x64\x9b\x49\xdb\xc0\xf4\xda\x66\xb3\xd3\xec\x33\x00\x00\xff\xff\x3f\xad\x1a\x6c\x5a\x03\x00\x00")

func examplesFileContentsJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesFileContentsJson,
		"examples/file-contents.json",
	)
}

func examplesFileContentsJson() (*asset, error) {
	bytes, err := examplesFileContentsJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/file-contents.json", size: 858, mode: os.FileMode(420), modTime: time.Unix(1496339683, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesGoogleStorageJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x4f\x4b\x03\x31\x10\xc5\xef\xfd\x14\x8f\x9c\x14\x6a\x77\x3d\x54\xb0\x57\x05\x2f\x82\x62\xed\x49\x44\xa6\x49\x76\x0d\xe6\x1f\x9b\x09\x96\x96\x7e\x77\xc9\x76\x17\xb6\xd2\x53\x86\xcc\xfc\xde\xbc\x79\x87\x19\x00\x08\x4f\x4e\x8b\x15\xc4\x53\x08\xad\xd5\x78\xb0\x21\x2b\xac\x39\x74\xd4\x6a\xe8\x1d\xb9\x68\xb5\x98\x9f\x66\x95\x4e\xb2\x33\x91\x4d\xf0\x05\x79\xa7\xf4\x03\xe3\x63\xe6\x04\xf2\x0a\x21\x73\x5f\x4b\xf2\xd8\x6a\x5c\x54\xdc\xbc\x3d\xa7\xc5\xa8\xa7\x77\x5a\x66\x0e\x5d\x12\x2b\x7c\xf4\x5f\xc0\x61\x78\x01\x61\x1c\xb5\xfa\x6b\x34\x98\xb7\xd9\x73\x1e\xd0\xbe\x2f\x9d\x2a\xa0\x70\x6a\x99\xb2\x13\x73\x88\x8a\x5d\xac\x1a\x63\xf5\x62\x6f\xa2\xf8\x9c\xcc\x26\x56\x21\x73\xd1\x19\xaa\xa1\x75\xec\xdf\x61\x52\x9c\x8e\xb9\xec\x66\xf4\xb1\x37\xb1\x6c\x98\x1a\xf9\x97\xcb\x63\xf8\xf5\x36\x90\x02\x21\xe6\xad\x35\x12\x05\x40\xd3\x05\x37\x86\x32\xc6\x71\xb5\x59\xe3\x95\x58\x7b\xc6\x4b\xd3\x18\xa9\xa1\x88\xe9\x7a\x2a\x9e\x3b\x5b\x44\xdb\xb4\xaa\xaa\x9c\x22\x87\x9b\x48\xa6\xab\x28\x46\x6b\x24\x95\x9d\xa9\xaa\x97\xf7\x75\x5d\xdf\xde\xf5\x67\x4f\xd8\x48\xfc\x5d\xe0\xf3\x5c\xce\x4f\x9f\x1d\x67\x7f\x01\x00\x00\xff\xff\xb5\x5b\x74\xc7\x0b\x02\x00\x00")

func examplesGoogleStorageJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesGoogleStorageJson,
		"examples/google-storage.json",
	)
}

func examplesGoogleStorageJson() (*asset, error) {
	bytes, err := examplesGoogleStorageJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/google-storage.json", size: 523, mode: os.FileMode(420), modTime: time.Unix(1494624283, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesHelloWorldJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\x41\x0a\xc2\x40\x0c\x45\xf7\x3d\x45\xc8\xba\x78\x80\xae\x5d\x78\x07\x29\x12\x67\x82\x1d\x9c\x99\x94\x49\x8a\x42\xe9\xdd\x65\x6a\x5b\xc4\xac\x3e\xf9\x2f\x3f\x7f\x6e\x00\x00\x30\x53\x62\xec\x00\x2f\x1c\xa3\xc0\x4b\x4a\xf4\xd8\x7e\x2d\xcf\xea\x4a\x18\x2d\x48\xae\xc4\x99\x93\x64\xb5\x42\xc6\x0a\x36\x30\x24\x51\x83\x3b\x69\x70\xc0\x6e\x10\x30\xd2\xe7\x69\x3f\xe6\x37\xbb\xc9\xa4\x28\x76\x70\x5d\x57\x75\xe6\x43\xad\x50\x48\xf4\xe0\xdb\x5e\x81\xe2\x18\x32\x6f\x01\x07\xe3\x92\xaf\x11\x58\x5f\x60\x0b\x38\xfc\x14\xed\xff\x58\x35\x2f\x93\xd5\xac\x4d\x1d\xf6\xb2\xaa\xbe\x59\x9a\x4f\x00\x00\x00\xff\xff\x40\x5f\xc3\x4d\xf8\x00\x00\x00")

func examplesHelloWorldJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesHelloWorldJson,
		"examples/hello-world.json",
	)
}

func examplesHelloWorldJson() (*asset, error) {
	bytes, err := examplesHelloWorldJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/hello-world.json", size: 248, mode: os.FileMode(420), modTime: time.Unix(1498081089, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesLogStreamingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\xcb\x6a\x23\x31\x10\x45\xf7\xfe\x8a\x8b\xd6\x1e\x37\xb3\xb5\xb7\xc3\xac\x66\x31\xfb\x60\x82\x2c\x5d\xba\x05\x7a\x34\x55\xd5\x49\x8c\xf1\xbf\x07\xb5\x1f\x84\x44\x0b\x51\x8f\xc3\x51\xa9\x2e\x1b\x00\x70\xd5\x17\xba\x3d\xdc\xbf\x36\x42\x4d\xe8\x4b\xaa\xa3\xdb\xde\x9a\x91\x1a\x24\xcd\x96\x5a\xed\xcc\x1f\x96\x56\xd5\xc4\x1b\x15\x36\x79\x83\x5a\x6c\x8b\x0d\x14\x41\x6e\xa3\xc2\x0b\xef\x16\x46\x9c\xce\xb0\x06\x9b\x88\xbf\x4b\xad\xcc\x88\x5e\xa7\x53\xf3\x12\x75\x87\xff\x92\xaa\xe9\xda\x8d\xde\x38\x58\x2a\x04\xdf\x28\x67\x28\x43\xab\x71\x8b\xa5\x5a\xca\x08\xbe\x06\x66\xc6\xdd\x63\x28\x7e\x30\x2c\xd6\x44\xdd\x1e\x2f\x6b\xa9\x9f\xcb\x33\x5a\xa1\x54\xfc\xc8\xd7\xc7\xe7\x7c\x9e\x53\xe5\x5d\xf0\x64\x42\x89\x5d\xe1\x74\x72\x5b\xb8\x5f\xa1\xdf\xef\x53\xca\x84\xc9\xc2\x03\x62\x5b\x47\x3b\x40\x33\x39\xe3\x77\xaf\x54\xba\xe3\x37\xcd\x6d\x07\xfd\x99\xc1\xca\x3c\xdc\xd3\x9f\x10\x45\xbe\x42\x3d\x7d\x32\xd7\x35\x3a\x6e\xae\x9b\xcf\x00\x00\x00\xff\xff\x31\x2b\x81\x7b\x97\x01\x00\x00")

func examplesLogStreamingJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesLogStreamingJson,
		"examples/log-streaming.json",
	)
}

func examplesLogStreamingJson() (*asset, error) {
	bytes, err := examplesLogStreamingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/log-streaming.json", size: 407, mode: os.FileMode(420), modTime: time.Unix(1494624283, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesMd5sumJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xcd\x6a\x2b\x31\x0c\x85\xf7\x79\x0a\xe1\x75\xc8\xac\xee\x26\xeb\xdb\x42\xa0\xbb\x2e\x4b\x08\x66\xac\x64\x0c\x23\xdb\x8c\x64\x48\x08\x79\xf7\xe2\x9f\x99\x52\xb7\x4d\x69\xeb\x95\x8c\x8e\x8e\x8f\x3e\x5f\x57\x00\x00\xca\x69\x42\xb5\x05\xb5\x73\x21\x0a\x68\x67\xc0\x47\x49\xe5\xd1\x8e\xa8\xd6\x45\x64\x90\xfb\xc9\x06\xb1\xde\x25\xed\x7f\x24\xef\x58\x26\x2d\xc8\x60\x3f\x1b\x64\x88\x6c\xdd\x09\x34\xb0\xa5\x30\x22\x90\xf9\xc7\x91\xa0\xf7\x44\xda\x99\xcd\x6c\x9c\x87\x59\x6d\xe1\x25\xdf\xd3\xb9\x2e\xd5\xbb\x7c\xd5\x20\x0f\xd4\xe9\x45\xd3\xc4\x2b\xab\x88\xaf\x8f\x6e\xa0\x13\x0a\x5d\xb9\x1c\x4a\x5c\x8a\x2c\x80\x67\xcb\x02\xde\x81\x0c\x08\x83\x67\x01\xbe\xb0\x20\x6d\x5a\xff\x38\x8d\xc9\x37\x2d\xb6\xed\xba\x0f\x6e\xad\x5c\x2e\x21\x47\x7e\xdc\x3d\x3d\xb4\xbd\xa0\x65\x48\xbd\x6c\x62\x9d\x5a\xba\xb7\x5c\xed\x2b\x97\x82\xf2\x27\x60\x58\x8c\xff\x96\xcc\x73\x16\x81\x3f\xce\xff\x61\x19\x7a\x1d\x24\x4e\xc8\x09\x58\x4e\x25\xc8\x72\xc8\xb2\xbf\x90\x29\x1b\xfc\x1a\x4d\xda\xe5\x0b\x36\x78\xc6\x3e\x8a\x9f\xee\xd2\xb1\xa4\x4f\x78\x98\x19\xe9\x31\x58\x87\xed\x83\x3d\x99\x64\x51\x09\xaa\xf5\xdb\xaf\xec\x1b\x65\x85\x7b\x2f\xdc\xea\xb6\x7a\x0d\x00\x00\xff\xff\xba\xce\x0d\x5b\x52\x03\x00\x00")

func examplesMd5sumJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesMd5sumJson,
		"examples/md5sum.json",
	)
}

func examplesMd5sumJson() (*asset, error) {
	bytes, err := examplesMd5sumJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/md5sum.json", size: 850, mode: os.FileMode(420), modTime: time.Unix(1494624283, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesPortRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8e\xb1\x6a\xc4\x30\x10\x44\x7b\x7f\xc5\xb0\xb5\x09\x97\xce\xb8\xce\x07\xa4\x0f\x26\x08\xdf\xe2\x13\x9c\x76\x15\xed\x1e\x04\x0e\xff\x7b\x90\x12\x0b\x1c\x55\x83\xe6\xe9\x8d\x9e\x03\x00\x90\x84\xc4\x34\x83\xde\xb5\x38\x0a\x7f\x3d\xd8\x9c\xc6\xdf\xee\xca\xb6\x96\x98\x3d\xaa\x54\xe4\x8d\x93\x8a\x79\x09\xce\x86\x60\x16\x37\x89\xb2\x21\x6b\x71\x83\x2b\xfc\xc6\xe0\x6f\x5e\x1f\xae\x05\xab\x8a\x87\x28\x5c\x5e\x0e\xdb\x51\x19\xcd\xf8\x68\x57\xf5\x3c\x7b\x6a\x50\x4c\x61\xe3\xcf\xe3\x53\xe1\x9e\xa3\xf0\x9f\xa0\x33\x6d\xb0\x4a\xce\x6f\x01\xba\xa9\x39\xcd\xb8\x8c\xa0\xbe\x4f\x33\xa6\x69\x9a\x4e\xe8\xbe\xfc\x53\xae\xe9\x5a\x85\x64\x77\xe6\x4c\x23\xe8\xf5\x42\x4b\x47\xf6\x96\x96\x61\x1f\x7e\x02\x00\x00\xff\xff\x76\x8e\xbb\x27\x35\x01\x00\x00")

func examplesPortRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesPortRequestJson,
		"examples/port-request.json",
	)
}

func examplesPortRequestJson() (*asset, error) {
	bytes, err := examplesPortRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/port-request.json", size: 309, mode: os.FileMode(420), modTime: time.Unix(1494624283, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _examplesResourceRequestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xcd\x6a\xc3\x30\x10\x84\xef\x7e\x8a\x61\xcf\xa2\xd8\x90\x5c\x7c\xeb\x0f\xf4\x54\x28\x81\x9e\x4a\x30\x5b\x79\x31\x22\xb1\xa4\x6a\x65\x28\x2d\x7e\xf7\x62\xc5\x4e\xda\x9b\xf4\x69\xf6\x1b\xb1\x3f\x15\x00\x90\xe7\x51\xa8\x05\x1d\x44\xc3\x94\xac\x20\xc9\xe7\x24\x9a\xc9\x5c\xde\x7b\x51\x9b\x5c\xcc\x2e\xf8\x25\xf6\x24\x63\xf0\x9a\x13\x67\x51\x30\x32\xeb\x69\x9b\x70\x7e\xc0\x0e\x8f\xaf\x6f\xb0\x21\x89\x1a\x34\x7b\x3c\x3f\xe0\x70\xff\x62\xc0\xbe\x47\x53\xd7\xcb\xbd\x77\x7a\x82\x46\xb6\x72\xb7\x75\xa4\xb5\x5b\xa9\xc5\xe5\x5b\x05\xdb\x38\x75\x45\x45\x2d\x76\xe6\xc6\x13\x8f\xdd\xf0\x41\x2d\x9a\xfd\x1f\xaa\xee\x5b\x56\x5c\xd7\x05\xcf\xab\x5e\xbe\xc4\x4e\x39\xa4\xc5\xf3\x7e\x1d\xb8\x15\x95\x90\x1b\x79\x90\x6e\xdb\x06\x9f\xa3\xf3\x42\xe6\x7f\xc6\x8e\xfd\xa2\x20\x3d\x8b\x44\x32\xa0\x86\x8e\xd7\xc4\x5c\x4e\xc7\x6a\xae\x7e\x03\x00\x00\xff\xff\x3a\xf5\x0f\x91\x5a\x01\x00\x00")

func examplesResourceRequestJsonBytes() ([]byte, error) {
	return bindataRead(
		_examplesResourceRequestJson,
		"examples/resource-request.json",
	)
}

func examplesResourceRequestJson() (*asset, error) {
	bytes, err := examplesResourceRequestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "examples/resource-request.json", size: 346, mode: os.FileMode(420), modTime: time.Unix(1494624283, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"examples/bundle.go":             examplesBundleGo,
	"examples/file-contents.json":    examplesFileContentsJson,
	"examples/google-storage.json":   examplesGoogleStorageJson,
	"examples/hello-world.json":      examplesHelloWorldJson,
	"examples/log-streaming.json":    examplesLogStreamingJson,
	"examples/md5sum.json":           examplesMd5sumJson,
	"examples/port-request.json":     examplesPortRequestJson,
	"examples/resource-request.json": examplesResourceRequestJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"examples": {nil, map[string]*bintree{
		"bundle.go":             {examplesBundleGo, map[string]*bintree{}},
		"file-contents.json":    {examplesFileContentsJson, map[string]*bintree{}},
		"google-storage.json":   {examplesGoogleStorageJson, map[string]*bintree{}},
		"hello-world.json":      {examplesHelloWorldJson, map[string]*bintree{}},
		"log-streaming.json":    {examplesLogStreamingJson, map[string]*bintree{}},
		"md5sum.json":           {examplesMd5sumJson, map[string]*bintree{}},
		"port-request.json":     {examplesPortRequestJson, map[string]*bintree{}},
		"resource-request.json": {examplesResourceRequestJson, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
