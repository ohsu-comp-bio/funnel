syntax = "proto3";

package scheduler;

import "google/api/annotations.proto";

message Resources {
  uint32 cpus = 1;
  // In GB
  double ram_gb = 2;
  // In GB
  double disk_gb = 3;
  bool preemptible = 4;
  string zone = 5;
}

enum NodeState {
  UNINITIALIZED = 0;
  ALIVE = 1;
  DEAD = 2;
  GONE = 3;
  INITIALIZING = 4;
}

message Node {
  string id = 1;
  Resources resources = 5;
  Resources available = 6;
  NodeState state = 8;
  string hostname  = 13;
  // Timestamp version of the record in the database. Used to prevent write conflicts and as the last ping time.
  int64 version = 14;
  map<string,string> metadata = 15;
  repeated string task_ids = 16;
  int64 last_ping = 17;
}

message GetNodeRequest {
  string id = 1;
}

message ListNodesRequest {}
message ListNodesResponse {
  repeated Node nodes = 1;
}

message PutNodeResponse {}
message DeleteNodeResponse {}

/**
 * Scheduler Service
 */
service SchedulerService {
  rpc PutNode(Node) returns (PutNodeResponse) {};
  rpc DeleteNode(Node) returns (DeleteNodeResponse) {};

  rpc ListNodes(ListNodesRequest) returns (ListNodesResponse) {
    option (google.api.http) = {
      get: "/v1/nodes"
    };
  };

  rpc GetNode(GetNodeRequest) returns (Node) {
    option (google.api.http) = {
      get: "/v1/nodes/{id}"
    };
  };
}
